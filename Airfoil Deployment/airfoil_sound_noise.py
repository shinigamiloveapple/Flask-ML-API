# -*- coding: utf-8 -*-
"""Airfoil Sound-Noise

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SQI3gL5uGs0g_mGz-wQ4-uQbJIK9jmqw

#Overview

The NASA data set comprises different size NACA 0012 airfoils at various wind tunnel speeds and angles of attack. The span of the airfoil and the observer position were the same in all of the experiments.

We need to predict the scaled sound pressure level in decibels.

---


**This problem has the following inputs:**

1. Frequency, in Hertzs.
2. Angle of attack, in degrees.
3. Chord length, in meters.
4. Free-stream velocity, in meters per second.
5. Suction side displacement thickness, in meters.

#Importing Libraries
"""

import pandas as pd
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error
import pickle
from sklearn.model_selection import train_test_split

"""#Reading Dataframe"""

df = pd.read_csv('NASA_airfoil_self_noise.csv')

df.head(5)

"""#Basic Data Infromation"""

df.info()

df.describe().T

df.corr()

df.isnull().sum()

"""#Train & Test Split"""

X = df.drop('Sound', axis=1)
y = df['Sound']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=40)

print("Size of train data : ", X_train.shape)
print("Size of test data : ", X_test.shape)

"""#Model Training"""

#Fitting X_train and y_train in Linear Regression Model
lr = LinearRegression().fit(X_train, y_train)

#Dumping the Model using Pickle for later process like making API 
pickle.dump(lr, open('airfoil_model.pkl', 'wb'))

"""#Model Prediciton & Evalutaion"""

predictions = lr.predict(X_test)

mae = mean_absolute_error(predictions, y_test)

print("Mean Absolute Error :", round(mae, 2))